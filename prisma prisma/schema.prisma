model User {
  id           String   @id @default(cuid())
  name         String?
  email        String   @unique
  passwordHash String
  image     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Like {
  id        String   @id @default(cuid())
  fromId    String
  toId      String
  createdAt DateTime @default(now())

  from User @relation("likesSent", fields: [fromId], references: [id], onDelete: Cascade)
  to   User @relation("likesReceived", fields: [toId], references: [id], onDelete: Cascade)

  @@unique([fromId, toId])
  @@index([toId])
}

model Match {
  id        String   @id @default(cuid())
  aId       String
  bId       String
  createdAt DateTime @default(now())

  a User @relation("matchesA", fields: [aId], references: [id], onDelete: Cascade)
  b User @relation("matchesB", fields: [bId], references: [id], onDelete: Cascade)

  @@unique([aId, bId])
  @@index([aId])
  @@index([bId])
}

model Hidden {
  id     String @id @default(cuid())
  userId String
  hideId String
  @@unique([userId, hideId])
}